<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.2.xsd ">

    <!-- 加载属性文件 -->
    <!--<context:property-placeholder location="classpath:resource.properties"/>-->

    <!-- 配置扫描器 -->
    <!--handlerMapping无需配置，springMVC可以默认启动
    DefaultAnnotationHandlerMapping  annotation-driven HandlerMapping-->
    <context:component-scan base-package="com.cqut.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 配置静态资源的访问映射，此配置中的文件，将不被前端控制器拦截-->
    <mvc:resources mapping="/module/css/**" location="/module/css/"/>
    <mvc:resources mapping="/module/js/**" location="/module/js/"/>
    <mvc:resources mapping="/module/img/**" location="/module/img/"/>

    <!-- 内部资源视图解析器，前缀 + 逻辑名 + 后缀 ViewResolver-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--激活spring基于annotation的DI使用户可以再springMvc中使用spring的强大功能-->
    <context:annotation-config/>

    <!--配置拦截器-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ma.core.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!-- 200*1024*1024即200M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxInMemorySize" value="209715200"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>-->

    <!--转换器-->
    <!-- conversionService -->
    <bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <!-- 转换器 -->
        <property name="converters">
            <list>
                <bean class="com.cqut.controller.converter.CustomDateConverter"/>
                <bean class="com.cqut.controller.converter.StringTrimConverter"/>
            </list>
        </property>
    </bean>

    <!-- 定义文件解释器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置默认编码 -->
        <property name="defaultEncoding" value="utf-8"></property>
        <!-- 上传图片最大大小5M-->
        <property name="maxUploadSize" value="5242440"></property>
    </bean>

    <!-- 注解驱动：配置处理器映射器和适配器 -->
    <mvc:annotation-driven/>

</beans>